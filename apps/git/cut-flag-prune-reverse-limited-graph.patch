diff -ruN git-1.7.9.4/revision.c modified-git-1.7.9.4/revision.c
--- git-1.7.9.4/revision.c	2012-03-12 19:30:26.000000000 -0400
+++ modified-git-1.7.9.4/revision.c	2012-04-08 23:40:26.000000000 -0400
@@ -415,6 +415,7 @@
 
 static void try_to_simplify_commit(struct rev_info *revs, struct commit *commit)
 {
+	return;
 	struct commit_list **pp, *parent;
 	int tree_changed = 0, tree_same = 0, nth_parent = 0;
 
@@ -1355,6 +1356,7 @@
 		revs->simplify_by_decoration = 1;
 		revs->limited = 1;
 		revs->prune = 1;
+    	abort();
 		load_ref_decorations(DECORATE_SHORT_REFS);
 	} else if (!strcmp(arg, "--date-order")) {
 		revs->lifo = 0;
@@ -1825,8 +1827,10 @@
 	if (revs->prune_data.nr) {
 		diff_tree_setup_paths(revs->prune_data.raw, &revs->pruning);
 		/* Can't prune commits with rename following: the paths change.. */
-		if (!DIFF_OPT_TST(&revs->diffopt, FOLLOW_RENAMES))
+		if (!DIFF_OPT_TST(&revs->diffopt, FOLLOW_RENAMES)) {
+      		abort();
 			revs->prune = 1;
+      }
 		if (!revs->full_diff)
 			diff_tree_setup_paths(revs->prune_data.raw, &revs->diffopt);
 	}
@@ -2072,9 +2076,11 @@
 
 	if (revs->no_walk)
 		return 0;
-	if (revs->limited)
+	if (revs->limited) {
+    	abort();
 		if (limit_list(revs) < 0)
 			return -1;
+   }
 	if (revs->topo_order)
 		sort_in_topological_order(&revs->commits, revs->lifo);
 	if (revs->simplify_merges)
@@ -2394,6 +2400,7 @@
 	struct commit_list *reversed;
 
 	if (revs->reverse) {
+    	abort();
 		reversed = NULL;
 		while ((c = get_revision_internal(revs))) {
 			commit_list_insert(c, &reversed);
@@ -2403,12 +2410,16 @@
 		revs->reverse_output_stage = 1;
 	}
 
-	if (revs->reverse_output_stage)
+	if (revs->reverse_output_stage) {
+    	abort();
 		return pop_commit(&revs->commits);
+    }
 
 	c = get_revision_internal(revs);
-	if (c && revs->graph)
+	if (c && revs->graph) {
+    	abort();
 		graph_update(revs->graph, c);
+   }
 	return c;
 }
 
